import org.junit.Test;
import static org.junit.Assert.assertEquals;

class Counter {

    local Integer count;

    public Counter(local Integer val) {
        count = val;
    }

    public int value() {
        return count;
    }

    public void increment(local Integer val) {
        count += val;
    }

    public void decrement(local Integer val) {
        count -= val;
    }
}

restriction RCounter for Counter {
    allows increment;
    allows decrement;
    allows value;
}

public class SharedObjectSimpleTest {
    @Test
    public void runtest() { // can't use test because that's a keyword in gallifrey
        shared[RCounter] Counter counter = new Counter(0);
        for (int i = 1; i <= 10; i++) {
            counter.increment(2);
            assertEquals(i + 1, counter.value());
            counter.decrement(1);
            assertEquals(i, counter.value());
        }
    }
}